@inject IPortfolioBlockService PortfolioBlockService;


<div class="PortfolioForm">
    <EditForm Model="@FormModel" OnValidSubmit="@PortfolioCreated" enctype="multipart/form-data">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <p>
            <label>
                Title:
                <InputText @bind-Value="FormModel.Title" />
            </label>
        </p>
        <p>
            <label>
                Icon:
                <InputText @bind-Value="FormModel.ShowcaseIcon" />
                <InputFile OnChange="@OnInputFileChange" accept=".png, .jpg, .jpeg" />
            </label>
        </p>
        <p>
            <label>
                Long Description:
                <InputText @bind-Value="FormModel.LongDescription" />
            </label>
        </p>
        <p>
            <label>
                Web Adress:
                <InputText @bind-Value="FormModel.WebAddress" />
            </label>
        </p>
        <button type="submit">Submit</button>
    </EditForm>
</div>


@code {
    private ComponentPortfolioBlock FormModel = new();
    private string response = string.Empty;
    IBrowserFile selectedFile;
    [Parameter]
    public EventCallback<string> OnPortfolioResult { get; set; }

    private void OnInputFileChange(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
    }

    protected async Task PortfolioCreated()
    {
        var portfolioCreated = PortfolioBlockService
        .CreateNewPortfolioBlockTemplate(FormModel.Title,
                                        "wwwroot/Icons/Portfolio/" + FormModel.ShowcaseIcon + selectedFile.Name.StartsWith('.'),
                                        selectedFile,
                                        FormModel.LongDescription,
                                        FormModel.WebAddress);
        if (!portfolioCreated)
        {
            response = "Already added portfolio with this title";
            await OnPortfolioResult.InvokeAsync(response);
        }
        else
        {
            response = "Portfolio successfully added";
            await OnPortfolioResult.InvokeAsync(response);
        }
    }
}
